const express = require('express');
const http = require('http');
const socketIo = require('socket.io');
const path = require('path');

const app = express();
const server = http.createServer(app);
const io = socketIo(server);

const users = [];

app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());

app.post('/login', (req, res) => {
    const { username } = req.body;
    if (users.length < 15 && username) {
        users.push(username);
        return res.status(200).json({ success: true, username });
    }
    res.status(400).json({ success: false, message: "Room full or invalid username" });
});

io.on('connection', (socket) => {
    console.log('New user connected');
    
    socket.on('chat-message', (msg) => {
        io.emit('chat-message', msg);
    });

    socket.on('signal', (data) => {
        socket.broadcast.emit('signal', data);
    });

    socket.on('disconnect', () => {
        console.log('User disconnected');
    });
});

app.post('/ask-chatbot', (req, res) => {
    const { question } = req.body;
    res.json({ answer: `You asked: ${question}. This is a mock answer.` });
});

server.listen(3000, () => {
    console.log('Server running on port 3000');
});
